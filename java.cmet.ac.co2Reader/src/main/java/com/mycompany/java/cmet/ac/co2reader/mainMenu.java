/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.java.cmet.ac.co2reader;

import java.io.*;
import java.util.*;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.*;
import javax.swing.*;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import com.mycompany.java.cmet.ac.co2reader.clientSide;

/**
 *
 * @author fahim
 */
public class mainMenu extends javax.swing.JFrame {

    /**
     * Creates new form mainMenu
     */
    public mainMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuTitle = new javax.swing.JLabel();
        ppmInputField = new javax.swing.JTextField();
        inputLabel = new javax.swing.JLabel();
        submitButton = new javax.swing.JButton();
        logOut = new javax.swing.JButton();
        postCodeLabel = new javax.swing.JLabel();
        postCodeInputField = new javax.swing.JTextField();
        additionalOptionsBar = new javax.swing.JMenuBar();
        additionalOptionsButton = new javax.swing.JMenu();
        viewRecordsPageLink = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        menuTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        menuTitle.setText("Welcome to the CO2 Reader");

        ppmInputField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        ppmInputField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppmInputFieldActionPerformed(evt);
            }
        });

        inputLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        inputLabel.setText("Input CO2 PPM:");

        submitButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        logOut.setText("Logout");
        logOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutActionPerformed(evt);
            }
        });

        postCodeLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        postCodeLabel.setText("Postcode:");

        postCodeInputField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        additionalOptionsButton.setText("Additional Options");

        viewRecordsPageLink.setText("View/Update Records");
        viewRecordsPageLink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRecordsPageLinkActionPerformed(evt);
            }
        });
        additionalOptionsButton.add(viewRecordsPageLink);

        additionalOptionsBar.add(additionalOptionsButton);

        setJMenuBar(additionalOptionsBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(110, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(menuTitle)
                        .addGap(172, 172, 172))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(logOut)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(postCodeLabel)
                            .addComponent(inputLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(ppmInputField, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                                .addComponent(postCodeInputField))
                            .addComponent(submitButton))
                        .addGap(226, 226, 226))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(logOut)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(menuTitle)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ppmInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(postCodeLabel)
                    .addComponent(postCodeInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(submitButton)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ppmInputFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppmInputFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ppmInputFieldActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // Declare Variables
        String ppmData = ppmInputField.getText();
        String postCode = postCodeInputField.getText();
        Date dataInputTime = new Date();

        // If statement to make sure that no fields are submitted empty
        if (ppmData.equals("") || postCode.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter a value");
        } else {
            ExecutorService executorService = Executors.newSingleThreadExecutor();

            // Use Callable to run the file-writing operation
            Callable<Void> fileWritingTask = () -> {
                try {
                    BufferedWriter writer = new BufferedWriter(new FileWriter("ppmData.csv", true));
                    //Appended code is formatted so it's easily readable
                    writer.append("\n" + "Postcode" + "," + "Parts per Million" + "," + "Date PPM recorded" + "\n" +
                            postCode + "," + ppmData + "," + dataInputTime + "\n");
                    writer.close();
                    return null;
                } catch (IOException ex) {
                    ex.printStackTrace();
                    return null;
                }
            };

            // Submit the task and get a Future object
            Future<Void> future = executorService.submit(fileWritingTask);

            // Handle the completion or exception (optional)
            executorService.shutdown(); // Shutdown the executor service when done so it uses only one thread at a time
            try {
                future.get(); // Wait for the task to complete 
                JOptionPane.showMessageDialog(null, "Data written to ppmData file successfully.");
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            // Create and display the GUI
            JFrame frame = new JFrame("Your Frame Title");
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

            // Add your components to the frame
            frame.pack();
            frame.setVisible(true);
        });
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() { 
                new mainMenu().setVisible(true);
            }
        });

   
    }//GEN-LAST:event_submitButtonActionPerformed

    private void logOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutActionPerformed
        //Program will write the time and date of logout to CSV file
        Date timeOfLogout = new Date();
        try {
            //Using BufferedWriter as opposed to FileWriter due to performance being better
            BufferedWriter writer = new BufferedWriter(new FileWriter("ppmData.csv", true));

            // Write data to the file
            writer.append("\n" + "Time user logged out" + "\n" +
                    timeOfLogout + "\n");
            //writer.newLine(); // Add a newline character

            

            // Close the BufferedWriter to flush and close the underlying FileWriter
            writer.close();

            JOptionPane.showMessageDialog(null,"Logout recorded, .");
        } catch (IOException e) {
            e.printStackTrace();
        }
        
        System.exit(0);
    }//GEN-LAST:event_logOutActionPerformed

    private void viewRecordsPageLinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRecordsPageLinkActionPerformed
        // TODO add your handling code here:
        viewRecords goToViewRecords = new viewRecords();
        goToViewRecords.setVisible(true);
        dispose();
    }//GEN-LAST:event_viewRecordsPageLinkActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(mainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(mainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(mainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(mainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() { 
//                new mainMenu().setVisible(true);
//            }
//        });
//        SwingUtilities.invokeLater(() -> {
//            // Create and display the GUI
//            JFrame frame = new JFrame("Your Frame Title");
//            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
//
//            // Add your components to the frame
//            
//            
//
//            frame.pack();
//            frame.setVisible(true);
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar additionalOptionsBar;
    private javax.swing.JMenu additionalOptionsButton;
    private javax.swing.JLabel inputLabel;
    private javax.swing.JButton logOut;
    private javax.swing.JLabel menuTitle;
    private javax.swing.JTextField postCodeInputField;
    private javax.swing.JLabel postCodeLabel;
    private javax.swing.JTextField ppmInputField;
    private javax.swing.JButton submitButton;
    private javax.swing.JMenuItem viewRecordsPageLink;
    // End of variables declaration//GEN-END:variables
}
